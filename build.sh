#!/bin/bash

echo ""
echo "Installing dotnet cli..."
echo ""

export CURRENT_SCRIPT_DIR="$PWD/$(dirname $0)"
export DOTNET_INSTALL_DIR="$CURRENT_SCRIPT_DIR/.dotnet"
export TOOLS_DIR="$CURRENT_SCRIPT_DIR/tools"
export GET_DOTNET_SCRIPT="$TOOLS_DIR/install.sh"

echo "Download latest install script from CLI repo"
curl -L --create-dirs https://raw.githubusercontent.com/dotnet/cli/rel/1.0.0/scripts/obtain/install.sh -o $GET_DOTNET_SCRIPT

# Make install script executable
chmod +x $GET_DOTNET_SCRIPT

# Execute install script
$GET_DOTNET_SCRIPT --channel "preview" --version Latest --install-dir "$DOTNET_INSTALL_DIR" --no-path

origPath=$PATH
export PATH="$DOTNET_INSTALL_DIR:$PATH"

if [ $? -ne 0 ]; then
  echo >&2 ".NET Execution Environment installation has failed."
  exit 1
fi

export DOTNET_HOME="$DOTNET_INSTALL_DIR/cli"
export PATH="$DOTNET_HOME/bin:$PATH"

export autoGeneratedVersion=false

# Generate version number if not set
if [[ -z "$BuildSemanticVersion" ]]; then
    autoVersion="$((($(date +%s) - 1451606400)/60))-$(date +%S)"
    export BuildSemanticVersion="rc2-$autoVersion"
    autoGeneratedVersion=true
    
    echo "Set version to $BuildSemanticVersion"
fi

sed -i '' "s/99.99.99-rc2/1.0.0-$BuildSemanticVersion/g" */*/project.json 

# Restore packages and build product
dotnet restore "src/dotnet-test-xunit"
dotnet pack "src/dotnet-test-xunit" --configuration Release --output "artifacts/packages"

#restore, compile, and run tests
dotnet restore "test" -s "artifacts/packages"
for test in test/*/
do 
echo "Testing $test"
    pushd "$test"
    dotnet build
    dotnet test
    popd
done

sed -i '' "s/1.0.0-$BuildSemanticVersion/99.99.99-rc2/g" */*/project.json 

if [ $autoGeneratedVersion ]; then
    unset BuildSemanticVersion
fi

export PATH=$origPath
